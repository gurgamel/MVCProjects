

<!--This was all generated when we added the view, then we modified it.
    The generated version gave us a list of products in table with Edit, Details, Delete
    buttons on the end of each row. This assumes that the controller has Edit, Details, and Delete methods, which it doesn't.

    We right clicked on Views/Admin and selected Add->View.
    In the Add dialogue, we gave it a name of Index, 
    Template as set to "List".
    For ModelClass we selected "Product"
    Create Partial View was unticked.
    Use a layout page was ticked.
    We selected our _AdminLayout.cshtml from Views/Shared.
    
    VS has realised that we will want a list of products, because
    we gave it Product as the model type.
    So it has built a view that displays a list of products.

    We that hacked out the generated code and replaced it with
    our own table.

    -->


@model IEnumerable<SportsStore.Domain.Entities.Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel panel-default">
    <h3>All Products</h3>
</div>

<div class="panel-body">

    <table class="table table-striped table-condensed table-bordered">
        <!--Column headers-->
        <tr>
            <th class="text-right">ID</th>
            <th>Name</th>
            <th class="text-right">Price</th>
            <th class="text-center">Actions</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <!--Product Id-->
                <td class="text-right">@item.ProductID</td>

                <!--Product name as link which points at the Edit method on 
                    the controller which called this view, and passes the ProductID to it-->
                <td>@Html.ActionLink(item.Name, "Edit", new {item.ProductID})</td>

                <!--Price-->
                <td class="text-right">@item.Price.ToString("c")</td>

                <!--Delete button-->
                <td class="text-center">
                    <!--A form which submits to the Delete method on the Admin controller-->
                    @using(Html.BeginForm("Delete", "Admin"))
                    {
                        @Html.Hidden("ProductID", item.ProductID)
                        <input type="submit" class="btn btn-default btn-xs" value="Delete" />
                    }
                    
                </td>
            </tr>
        }

    </table>

</div>

<div class="panel-footer">
    <!-- emit an html link, use css to make it a button, which points at the Create method on 
        the controller which called this view (AdminController)-->
    @Html.ActionLink("Add a new product", "Create", null, new { @class="btn btn-default"})
</div>
